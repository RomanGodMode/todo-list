version: '3.1'

services:
  db:
    image: postgres:11.2
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - nesjs-network
    volumes:
      - ./src/server/db:/var/lib/postgresql/data
      - ./src/server/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432

  react-client:
    depends_on:
      - backend
    links:
      - backend
    build:
      dockerfile: src/react-client/Dockerfile.prod
      context: ./src/react-client
    image: react-client-prod:1.0.0
    env_file:
      - .env.production
    container_name: react_client_prod
    ports:
      - 3000:3000
    environment:
      BACKEND_URL: backend

  backend:
    depends_on:
      - db
    container_name: nestjs_api_prod
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: src/server/Dockerfile
    env_file:
      - .env.production
    links:
      - db
    command: npm run start:prod
    ports:
      - 8080:8080
    networks:
      - nesjs-network
    volumes:
      - ./src/server:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
networks:
  nesjs-network:
