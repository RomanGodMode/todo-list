version: '3.0'

services:
  db:
    image: postgres:11.2
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - nesjs-network
    volumes:
      - ./src/server/db:/var/lib/postgresql/data
      - ./src/server/postgresql.conf:/etc/postgresql/postgresql.conf
    logging:
      driver: none
    ports:
      - 5432:5432

  react-client:
    depends_on:
      - backend
    build:
      context: ./src/react-client/
      dockerfile: ./Dockerfile.dev
    restart: always
#    image: romangodmode/react_client_dev:1.0.0

    env_file:
      - ./src/react-client/.env.development

    container_name: react_client_dev
    ports:
    - 3000:3000
    volumes:
      - ./src/react-client:/usr/src/app/

  angular-client:
    depends_on:
      - backend
    container_name: angular_client_dev
    build:
      context: ./src/angular-client
      dockerfile: ./Dockerfile.dev
    restart: always
    ports:
      - 4200:4200
    volumes:
      - /app/node_modules
      - ./src/angular-client:/app

  backend:
    depends_on:
      - db
    container_name: nestjs_api_dev
    build:
      context: ./src/server/
      dockerfile: ./Dockerfile.dev
    env_file:
      - .env.development
    ports:
      - 8080:8080
    networks:
      - nesjs-network

    volumes:
      - ./src/server:/usr/src/app
      - /usr/src/app/node_modules
    restart: always

networks:
  nesjs-network:
